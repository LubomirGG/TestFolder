If you have generated the view from the book model, it will usually just display the author ID number instead of their name. If you create a function called getAuthorname or something like that (in your Book model) and return the relevant fields from the related Author model, you can then echo out $model->authorname in your view and it will use the function you created. Your function must have "get" at the start of it for it to become a magic getter function.?

CONCAT(x,a) AS ime
UPPER(name)(upper LATERS)
AVG(chisla)
SUM(chisla)
COUNT(name)WHERE seller_id=6
AVG(cost) WHERE seller_id=6

e.id e.name company.comp e.activity m.name

http://www.killersites.com/community/index.php?/topic/1969-basic-php-system-vieweditdeleteadd-records/



SELECT m.id ,m.name, e.name FROM employee e JOIN employee m ON e.id=m.meng_id 


SELECT * 
FROM employee 
LEFT JOIN company 
ON employee.comp_id=company.id




SELECT 
e.id, e.name, company.comp, e.activity, m.name as manager
FROM employee e 
LEFT JOIN company 
ON e.comp_id=company.id
LEFT JOIN employee m
ON m.id=e.meng_id



SELECT 
e.id, e.name, company.comp,e.tel, e.activity, m.name as manager,t.name as taskname
FROM employee e 
LEFT JOIN company 
ON e.comp_id=company.id
LEFT JOIN employee m
ON m.id=e.meng_id
LEFT JOIN employee_tasks as et
ON e.id=et.employee_id
LEFT JOIN tasks as t
ON et.tasks_id=t.id


SELECT id,name,comp_id,tel,meng_id,activity,employee_tasks.tasks_id FROM `employee`
INNER JOIN employee_tasks
ON id=employee_tasks.employee_id

